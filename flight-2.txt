Authentication için obtain.auth yönteminden başka third party olan bir paket kullanacağız.
! dj-rest-auth
https://www.django-rest-framework.org/api-guide/authentication/#django-rest-auth-dj-rest-auth
* dökümantasyon
https://dj-rest-auth.readthedocs.io/en/latest/installation.html
? pip install dj-rest-auth

? token ayarlarını base'e eklemeyi unutma
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ]
}

! dökümantasyon'dan API endpointslere bakılabilir
https://dj-rest-auth.readthedocs.io/en/latest/api_endpoints.html
..
http://127.0.0.1:8000/users/auth/login/
http://127.0.0.1:8000/users/auth/logout/

* logout yapınca token silinir,fakat browserdan yaptığımız zaman browser token'ı silmiyor.(logout olurken token göndermediğimiz için).bu yüzden postman gibi araçlarla backendde endpointleri test ediyoruz
? logout yaparken kimin sistem logout oldugunu bilmesi lazım bu yüzden logout işlemi yaparken token'ı da gönderiyoruz

! Field-level Validation
serializers'da istediğim bir filed için de validation yazabilirim
örneğin first_name ile ilgili bir validation yazmak istiyorum
def validate_first_name(self,value):
(burada value --> first_name oluyor)
! Object-level Validation
birden fazla field ile ilgili validation yapıyorsam object-level olur..
password-password2 karşılaştırması için object-level validation kullanıyoruz.

bir kullanıcı register olduktan sonra onu tekrardan login sayfasına yönlendirmeye gerek yok.direk login olmuş gibi devam edilir (genelde siteler de böyle yapar)

! Generate token with signals
! Return user data after login
kullanıcı login olduktan sonra profil resmi,username.. gibi bilgiler gelmesi gerekir

? Sinyal yöntemi ile token oluşturmak için signals.py dosyası oluşturdum
fakat ayrı bir dosya olarak oluşturduğum için bunu apps.py'a tanıtmam lazım.

def ready(self) -> None:
        import users.signals

signal'i models içinde yazsaydım bu işleme gerek yoktu.

! TOKEN'I RESPONSE OLARAK DÖNDÜRMEK İÇİN
views'te CreateAPIView'in kaynak kodundaki create metodunu alıp aynı yere (views'e kopyaladım) (parent'dan kendi class'ıma aldım) kendime göre override yapacağım
? Custom token serializer için  --> base.py
REST_AUTH_SERIALIZERS = {
    'TOKEN_SERIALIZER': 'users.serializers.CustomTokenSerializer',
    
}
